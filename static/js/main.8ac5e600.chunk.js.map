{"version":3,"sources":["gfx/banner.png","serviceWorker.ts","CurrencyEntry.tsx","CurrencyHeading.tsx","CurrencyTable.tsx","HeaderBanner.tsx","Header.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","round","num","Math","pow","CurrencyEntry","id","rank","name","symbol","circ","total","price","cap","change","className","src","CurrencyHeading","handler","text","onClick","matchSearch","str","query","toUpperCase","startsWith","toUpper","x","sortObjectList","list","newProp","ascending","console","log","concat","sort","a","b","CurrencyTable","useState","entryList","setList","lastUpdate","setLastUpdate","pagePos","setPagePos","setQuery","sortAscending","setAscending","sortKey","setSortKey","API_KEY","SET_API_KEY","totalElems","length","useEffect","interval","setInterval","handleUpdate","clearInterval","fetchData","CORS_ANYWHERE","result","data","headers","params","axios","get","then","r","catch","err","map","e","cmc_rank","circulating_supply","total_supply","quote","EUR","market_cap","percent_change_24h","Date","now","f","handleSort","target","onSubmit","preventDefault","keyBox","value","classList","add","alert","placeholder","onChange","type","filter","entry","i","key","slice","HeaderBanner","href","banner","Header","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8ac5e600.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.dbe8047a.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './CurrencyEntry.css';\n\nfunction CurrencyEntry({id, rank, name, symbol, circ, total, price, cap, change}: any) {\n  return (\n    <div className=\"currency\">\n      <div className=\"rank\">{rank}</div>\n      <div className=\"name\">{name}</div>\n      <div className=\"symbol\">{symbol}</div>\n      <div className=\"circ\">{round(circ)} {symbol}</div>\n      <div className=\"total\">{round(total)} {symbol}</div>\n      <div className=\"price\">{round(price)} €</div>\n      <div className=\"cap\">{round(cap)} €</div>\n      <div className={\"change \" + ((change < 0) ? 'neg' : 'pos')}>{round(change)}%</div>\n      <img className=\"history\" src={`https://s2.coinmarketcap.com/generated/sparklines/web/7d/usd/${id}.png`}/>\n    </div>\n  );\n}\n\nconst round = (num: number) => {\n  return Math.round(num * Math.pow(10, 4)) / Math.pow(10,4)\n}\n\nexport default CurrencyEntry;\n","import React from 'react';\nimport './CurrencyHeading.css';\n\nfunction CurrencyHeading ({id, handler, text}: any) {\n  return (\n    <div className=\"heading\" onClick={handler} id={id}>{text}</div>\n  )\n}\nexport default CurrencyHeading;\n","/*\nMain program logic (API fetching, processing and displaying) lives here.\nAPI key is entered in an input form.\n\nFor local testing, a CORS Proxy was in place.\n(https://github.com/Rob--W/cors-anywhere)\nOn this public version of the WebApp, a different proxy is used.\n\n*/\n\n\nimport React, { useState, useEffect } from 'react';\nimport './CurrencyTable.css';\nimport CurrencyEntry from './CurrencyEntry';\nimport CurrencyHeading from './CurrencyHeading';\nimport axios from 'axios';\n\nfunction CurrencyTable() {\n  const [entryList, setList]          = useState([])\n  const [lastUpdate, setLastUpdate]   = useState(0)\n  const [pagePos, setPagePos]         = useState(0)\n  const [query, setQuery]             = useState(\"\")\n  const [sortAscending, setAscending] = useState(true)\n  const [sortKey, setSortKey]         = useState(\"rank\")\n  const [API_KEY, SET_API_KEY]        = useState(\"\")\n  \n  const CORS_ANYWHERE = \"https://cors-anywhere.herokuapp.com/\"\n  const totalElems  = entryList.length\n  const pageElems   = 50\n  const headings = [\"rank\", \"name\", \"symbol\", \"circ\", \"total\", \"price\", \"cap\", \"change\", \"history\"]\n\n  // Update data every INTERVAL milliseconds\n  // https://stackoverflow.com/questions/39426083/update-react-component-every-second\n  const INTERVAL = 10000\n  useEffect(() => {\n    if (API_KEY != \"\") {\n      const interval = setInterval(() => handleUpdate(), INTERVAL);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, []);\n\n  // Return latest results as list of objects\n  const fetchData = async() => {\n    const URL: string       = CORS_ANYWHERE + \"https://sandbox-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\"\n    const CURRENCY: string  = \"EUR\"\n    const AMOUNT: number    = 5000\n    var result: any         = {data: []}\n    console.log(\"API_KEY\")\n    console.log(API_KEY)\n  \n    const headers = {\n      \"Accept\": \"application/json\",\n      \"X-CMC_PRO_API_KEY\": API_KEY\n    }\n    const params = {\n      \"start\": 1,\n      \"limit\": AMOUNT,\n      \"convert\": CURRENCY\n    }\n    await axios.get(URL, {headers, params})\n         .then(r => {result = r.data})\n         .catch((err) => {console.log(\"ERROR (Axios): \"); console.log(err);})\n\n    // Convert Axios promise to list of objects\n    return result.data.map((e: any) => { return {\n      \"id\" :    e.id,\n      \"rank\" :  e.cmc_rank,\n      \"name\" :  e.name,\n      \"symbol\": e.symbol,\n      \"circ\":   e.circulating_supply,\n      \"total\":  e.total_supply,\n      \"price\":  e.quote.EUR.price,\n      \"cap\":    e.quote.EUR.market_cap,\n      \"change\": e.quote.EUR.percent_change_24h }\n      })\n\n  }\n  // Handlers \n  const handleUpdate = () => {\n    if(Date.now() - lastUpdate >= 5000) {\n      fetchData().then(f => setList(sortObjectList(f, sortKey, sortAscending)))\n      setLastUpdate(Date.now())\n      console.log(\"Update handled\")\n    }\n    else\n      console.log(\"Update limit\")\n  }\n  const handleNextPage = () => {\n    if(pagePos + pageElems < totalElems)\n      setPagePos(pagePos+pageElems)\n  }\n  const handlePrevPage = () => {\n    if(pagePos - pageElems >= 0)\n      setPagePos(pagePos-pageElems)\n  }\n  const handleSearch = (e: any) => {\n    setPagePos(0)\n    setQuery(e.target.value)\n  }\n  const handleKeyBox = (e: any) => {\n    SET_API_KEY(e.target.value)\n  }\n  const submitKey = (e: any) => {\n    e.preventDefault()\n    const val = e.target.keyBox.value\n    if(val.length != 36) {\n      window.alert(\"Enter a valid API key.\")\n      return\n    }\n    SET_API_KEY(e.target.keyBox.value)\n    fetchData().then(f => setList(sortObjectList(f, sortKey, sortAscending)))\n    e.target.classList.add(\"submitted\")\n  }\n  const handleSort = (e: any) => {\n    const newProp = e.target.id\n    console.log(\"newProp \" + newProp)\n    setList(sortObjectList(entryList, newProp, sortAscending))\n    setAscending(!sortAscending)\n    setSortKey(newProp)\n  }\n  // TODO: Improve readability\n  return (\n    <div className=\"currencyTable\">\n      <div className=\"navigation\">\n        <div className=\"pageDisplay\">\n          <form id=\"keyForm\" onSubmit={submitKey}>\n            <input name=\"keyBox\" id=\"keyBox\" placeholder=\"Enter API key\" onChange={handleKeyBox}></input>\n            <input name=\"submit\" type=\"submit\"/>\n          </form>\n          <input id=\"searchBox\" onChange={handleSearch} placeholder=\"Search\"></input>\n          <div className=\"pageButton\" onClick={handlePrevPage}>Previous page</div>\n          <div className=\"pageButton\" onClick={handleNextPage}>Next page</div>\n          <div id=\"results\">Results: {pagePos + 1} - {totalElems}</div>\n        </div>\n      </div>\n      <div className=\"headings\"> \n        { headings.map(\n              (id: string) => \n              (<CurrencyHeading \n              id      = {id} \n              handler = {handleSort} \n              text    = {id} \n              />))\n        } \n      </div>    \n      <div className=\"entries\">\n      { entryList.filter( \n          // Search filter\n           (entry: any) => matchSearch(entry.name, query))\n          // Entry creation\n          .map( \n           (entry: any, i: number) => \n           (<CurrencyEntry \n           id     = {entry.id}\n           rank   = {entry.rank}\n           name   = {entry.name} \n           symbol = {entry.symbol} \n           circ   = {entry.circ} \n           total  = {entry.total} \n           price  = {entry.price}\n           cap    = {entry.cap} \n           change = {entry.change} \n           key    = {i}\n           />))\n          // Pagination \n          .slice(pagePos, pagePos+pageElems) \n      }\n      </div>\n    </div>\n  )\n}\n\n// Helper functions\nconst matchSearch = (str: string, query: string) => {\n  return str.toUpperCase().startsWith(query.toUpperCase()) \n}\n\nconst isString = (s: string) => {\n  return (typeof s == \"string\")\n}\n\nconst toUpper = (x: any) => {\n  if(isString(x))\n    return x.toUpperCase()\n  else return x\n}\n\nconst sortObjectList = (list: any, newProp: any, ascending: boolean) => { \n  console.log(\"newProp\")\n  console.log(newProp)\n  if (ascending)\n    return (list.concat([]).sort((a: any, b: any) => (toUpper(a[newProp]) > b[newProp]) ? 1 : -1))\n  else\n    return (list.concat([]).sort((a: any, b: any) => (toUpper(a[newProp]) < b[newProp]) ? 1 : -1))\n}\n\nexport default CurrencyTable;\n","import React from 'react';\nimport banner from './gfx/banner.png';\nimport './HeaderBanner.css';\n\nfunction HeaderBanner() {\n  return (\n    <div className=\"banner\">\n      <a href=\"/CoinMarketRecapPub/\"><img src={banner} /></a> \n    </div>\n  );\n}\n\nexport default HeaderBanner;\n\n","import React from 'react';\nimport HeaderBanner from './HeaderBanner';\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <HeaderBanner />\n    </div>\n  );\n}\n\nexport default Header;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n// Components and data\nimport CurrencyTable from './CurrencyTable';\nimport Header from './Header';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <CurrencyTable />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}